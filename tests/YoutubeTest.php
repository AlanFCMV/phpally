<?php

use CidiLabs\PhpAlly\Video\Youtube;

class YoutubeTest extends PhpAllyTestCase {

    public function testCaptionsMissing()
    {
        $client = new \GuzzleHttp\Client(['http_errors' => false]);
        $youtube = new Youtube($client, 'en', 'testApiKey');
        $response = [];

        $this->assertEquals($youtube->captionsMissing($response), YouTube::YOUTUBE_FAIL);
    }

    public function testCaptionsMissingHasCaptions()
    {
        $client = new \GuzzleHttp\Client(['http_errors' => false]);
        $youtube = new Youtube($client, 'en', 'testApiKey');
        $response = \json_decode('[
            {
                "snippet": {
                    "trackKind": "asr",
                    "language": "es"
                }
            },
            {
                "snippet": {
                    "trackKind": "standard",
                    "language": "es-419"
                }
            }
        ]');

        $this->assertEquals($youtube->captionsMissing($response), YouTube::YOUTUBE_SUCCESS);
    }

    public function testCaptionsLanguageFail(){
        $client = new \GuzzleHttp\Client(['http_errors' => false]);
        $youtube = new Youtube($client, 'en', 'testApiKey');
        $response = \json_decode('[
            {
                "snippet": {
                    "trackKind": "standard",
                    "language": "es"
                }
            },
            {
                "snippet": {
                    "trackKind": "standard",
                    "language": "es-419"
                }
            }
        ]');

        $this->assertEquals($youtube->captionsLanguage($response), YouTube::YOUTUBE_FAIL);
    }

    public function testCaptionsLanguageSuccess(){
        $client = new \GuzzleHttp\Client(['http_errors' => false]);
        $youtube = new Youtube($client, 'en', 'testApiKey');
        $response = \json_decode('[
            {
                "snippet": {
                    "trackKind": "standard",
                    "language": "en"
                }
            },
            {
                "snippet": {
                    "trackKind": "standard",
                    "language": "es-419"
                }
            }
        ]');

        $this->assertEquals($youtube->captionsLanguage($response), YouTube::YOUTUBE_SUCCESS);
    }

    public function testCaptionsLanguageEmpty(){
        $client = new \GuzzleHttp\Client(['http_errors' => false]);
        $youtube = new Youtube($client, 'en', 'testApiKey');
        $response = [];

        $this->assertEquals($youtube->captionsLanguage($response), YouTube::YOUTUBE_SUCCESS);
    }

    public function testCaptionsNoLanguage(){
        $client = new \GuzzleHttp\Client(['http_errors' => false]);
        $youtube = new Youtube($client, '', 'testApiKey');
        $response = \json_decode('[
            {
                "snippet": {
                    "trackKind": "standard",
                    "language": "en"
                }
            },
            {
                "snippet": {
                    "trackKind": "standard",
                    "language": "es-419"
                }
            }
        ]');

        $this->assertEquals($youtube->captionsLanguage($response), YouTube::YOUTUBE_SUCCESS);
    }

    public function testCaptionsNoLanguageFailure(){
        $client = new \GuzzleHttp\Client(['http_errors' => false]);
        $youtube = new Youtube($client, '', 'testApiKey');
        $response = \json_decode('[
            {
                "snippet": {
                    "trackKind": "standard",
                    "language": "de"
                }
            },
            {
                "snippet": {
                    "trackKind": "standard",
                    "language": "es-419"
                }
            }
        ]');

        $this->assertEquals($youtube->captionsLanguage($response), YouTube::YOUTUBE_FAIL);
    }

    public function testCaptionsAutoGeneratedFailure(){
        $client = new \GuzzleHttp\Client(['http_errors' => false]);
        $youtube = new Youtube($client, 'en', 'testApiKey');
        $response = \json_decode('[
            {
                "snippet": {
                    "trackKind": "asr",
                    "language": "en"
                }
            }
        ]');

        $this->assertEquals($youtube->captionsAutoGenerated($response), YouTube::YOUTUBE_FAIL);
    }

    public function testCaptionsAutoGeneratedSuccess(){
        $client = new \GuzzleHttp\Client(['http_errors' => false]);
        $youtube = new Youtube($client, 'en', 'testApiKey');
        $response = \json_decode('[
            {
                "snippet": {
                    "trackKind": "asr",
                    "language": "ru"
                }
            },
            {
                "snippet": {
                    "trackKind": "standard",
                    "language": "es-419"
                }
            }
        ]');

        $this->assertEquals($youtube->captionsAutoGenerated($response), YouTube::YOUTUBE_SUCCESS);
    }

}